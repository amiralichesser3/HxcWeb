@page "/hxc/organization/todos"
@using HxcApiClient.Common
@using HxcApiClient.Http
@using HxcApiClient.Todos.Records
<h3>Organization Todos</h3>
@inject IHxcApiClient HxcApiClient
@inject IDialogService DialogService

@if (TodoRecords != null)
{
    foreach (TodoRecord todo in TodoRecords)
    {
        <MudButton OnClick="() => LoadTodo(todo.Id)">@todo.Title</MudButton>
    }
    <br/>
    <MudButton Disabled="IsLoading" OnClick="AddRandomTodoAsync">Add Random Todo</MudButton>
    <br/>
    <MudButton Disabled="IsLoading" OnClick="AddInvalidTodoAsync">Add Invalid Todo</MudButton>
}

@code {
    bool IsLoading { get; set; }
    protected ICollection<TodoRecord>? TodoRecords { get; set; }

    protected override async Task OnInitializedAsync()
    {
        HxcHttpResponse<ICollection<TodoRecord>> response = await HxcApiClient.Todos.GetOrganizationTodosAsync();
        if (response.IsSuccess)
        {
            TodoRecords = response.Data;
        }
        else
        {
            Console.WriteLine(response.StatusCode);
            Console.WriteLine(response.ErrorMessage);
        }
    }

    private async Task LoadTodo(int todoId)
    {
        HxcHttpResponse<TodoRecord> response = await HxcApiClient.Todos.GetOrganizationTodoByIdAsync(todoId);
        if (response.IsSuccess)
        {
            DialogParameters parameters = new()
            {
                { nameof(TodoDialog.Todo), response.Data }
            };

            DialogOptions options = new()
            {
                NoHeader = false,
                CloseButton = true,
                MaxWidth = MaxWidth.Medium,
                FullWidth = true,
                CloseOnEscapeKey = true,
                Position = DialogPosition.Center
            };

            await DialogService.ShowAsync<TodoDialog>("Todo", parameters, options);
        }
        else
        {
            Console.WriteLine(response.StatusCode);
            Console.WriteLine(response.ErrorMessage);
        }
    }

    private async Task AddRandomTodoAsync()
    {
        IsLoading = true;
        TodoRecord todo = new(0, Guid.NewGuid().ToString(), DateTime.Now);
        HxcHttpResponse response = await HxcApiClient.Todos.CreateOrganizationTodoAsync(todo);
        if (response.IsSuccess)
        {
            Console.WriteLine("Successfully Added Todo");
        }
        else
        {
            Console.WriteLine(response.StatusCode);
            Console.WriteLine(response.ErrorMessage);
        }

        IsLoading = false;
    }

    private async Task AddInvalidTodoAsync()
    {
        IsLoading = true;
        TodoRecord todo = new(0, "Killing some innocent people", DateTime.Now);
        HxcHttpResponse response = await HxcApiClient.Todos.CreateOrganizationTodoAsync(todo);
        if (response.IsSuccess)
        {
            Console.WriteLine("Successfully Added Todo");
        }
        else
        {
            Console.WriteLine(response.StatusCode);
            Console.WriteLine(response.ErrorMessage);
        }

        IsLoading = false;
    }

}